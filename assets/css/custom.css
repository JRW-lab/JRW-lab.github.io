@media (max-width: 1024px) {
  .parallax-layer {
    display: none !important;
  }
}

body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  background: #0E1B23;
  background-attachment: fixed;
  background-size: cover;
  background-position: center bottom;
  background-repeat: no-repeat;
  width: 100vw;
  max-width: 100vw;
  box-sizing: border-box
}

.sidebar {
  width: 200px;
  min-height: 100vh;
  background-color: #E4E4E4;
  overflow-y: auto;
  box-sizing: border-box;
  position: fixed;
  top: 0;
  bottom: 0;
  left: calc(50vw - 600px);
  display: flex;
  flex-direction: column;
  justify-content: center;  /* Vertical centering */
  height: 80vh;             /* or full viewport height you want */
  padding: 1rem;
  border-left: 1px solid #ddd;
}

/* Remove or rename .container if unused now */
/* You might want to remove this if using .page-content */

.container {
  /* You can delete this if not used */
  background: rgba(255, 255, 255, 0.85); /* overlay */
  padding: 2rem;
  max-width: 800px;
  margin: auto;
  box-shadow: 0 0 10px rgba(0,0,0,0.2);
}

/* The white vertical column behind content */
.white-column {
  position: absolute;
  top: 573px;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 0 auto;
  max-width: 960px;
  width: 100%;
  background: #E4E4E4;
  z-index: 0;
}

header, footer, .pages, .page-content {
  position: relative; /* make z-index work */
  z-index: 1; /* higher than white-column */
}

/* Your actual page content on top */
.page-content {
  position: relative;
  max-width: 800px;
  margin: 0 auto;
  padding: 0;
  z-index: 2;
  background: transparent; /* so white-column shows behind */
  text-align: justify;
  color: #202020;
}

.column-wrapper {
  position: relative;   /* Allows white-column to be absolutely positioned inside */
  min-height: 100vh;
}

.parallax-layer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vw;
  background-position: center bottom;
  background-repeat: no-repeat;
  background-size: cover;
  overflow: hidden;
  z-index: -10; /* behind everything else */
  pointer-events: none; /* allows interaction through them */
  will-change: transform;
}

/* Each layer has its own image and z-index to control order */
.layer4 {
  background-image: url('/assets/images/forest-bg-layer4.png');
  z-index: -10;
}
.layer3 {
  background-image: url('/assets/images/forest-bg-layer3.png');
  z-index: -9;
}
.layer2 {
  background-image: url('/assets/images/forest-bg-layer2.png');
  z-index: -8;
}
.layer1 {
  background-image: url('/assets/images/forest-bg-layer1.png');
  z-index: -7;
}

/* Header Styles */
/* h1 {
    color: #1a73e8;
} */
h2 {
    color: #000000;
}
h3 {
    color: #3f3f3f;
}
h4 {
    color: #000000;
}
h5 {
    color: #000000;
}
h6 {
    color: #000000;
}

/* Hide sidebar on small screens */
@media screen and (max-width: 1200px) {
  .sidebar {
    display: none;
  }
  html, body {
    overflow-x: hidden !important;
    position: relative;
    width: 100%;
    max-width: 100vw;
  }
}

#cube-container {
  position: relative;
  width: 100%;
  max-width: 100vw;
  height: auto;
  aspect-ratio: 1;
  overflow: hidden;
  margin: 0 auto;
  box-sizing: border-box;
}

canvas, #hud-canvas {
  display: block;
  width: 100%;
  height: auto;
  max-width: 100vw;
  box-sizing: border-box;
  position: absolute;
  z-index: 10;
}

#hud-hover-area {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 70px;
  z-index: 20;
  pointer-events: auto;
  cursor: pointer;
}

#tooltip {
  position: fixed;
  pointer-events: none;
  background: white;
  padding: 4px 8px;
  border: 1px solid #ccc;
  font-family: monospace;
  font-size: 12px;
  border-radius: 4px;
  display: none;
  z-index: 100;
  white-space: nowrap;
}